<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 
                             http://maven.apache.org/xsd/maven-4.0.0.xsd">

  <modelVersion>4.0.0</modelVersion>
  <groupId>motorph</groupId>
  <artifactId>IAS2-MotorPH-Payroll-System</artifactId>
  <version>1.0.0</version>
  <packaging>jar</packaging>

  <name>IAS2-MotorPH-Payroll-System</name>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <maven.compiler.release>23</maven.compiler.release>
    <exec.mainClass>main.Main</exec.mainClass>

    <!-- Plugin versions -->
    <surefire.version>3.2.5</surefire.version>
    <jacoco.version>0.8.12</jacoco.version>
    <depcheck.version>9.2.0</depcheck.version>
    <sonar.maven.plugin.version>3.10.0.2594</sonar.maven.plugin.version>

    <!-- OWASP Dependency-Check behavior -->
    <depcheck.fail.cvss>7.0</depcheck.fail.cvss>

    <!-- SonarCloud configuration -->
    <sonar.host.url>https://sonarcloud.io</sonar.host.url>
    <sonar.projectKey>kleinborre_ias2-g9-mph</sonar.projectKey>
    <sonar.organization>kleinborre</sonar.organization>

    <!-- Make sure Sonar picks up JaCoCo's XML coverage report -->
    <sonar.coverage.jacoco.xmlReportPaths>${project.build.directory}/site/jacoco/jacoco.xml</sonar.coverage.jacoco.xmlReportPaths>

    <!-- Optional: tighten rule scope (uncomment to exclude autogenerated GUI) -->
    <!-- <sonar.exclusions>**/ui/**,**/ui/base/**</sonar.exclusions> -->
  </properties>

  <repositories>
    <repository>
      <id>jaspersoft-repo</id>
      <url>https://jaspersoft.jfrog.io/artifactory/third-party-ce-artifacts/</url>
    </repository>
  </repositories>

  <dependencies>
    <!-- JDBC -->
    <dependency>
      <groupId>com.mysql</groupId>
      <artifactId>mysql-connector-j</artifactId>
      <version>9.3.0</version>
    </dependency>

    <!-- JasperReports -->
    <dependency>
      <groupId>net.sf.jasperreports</groupId>
      <artifactId>jasperreports</artifactId>
      <version>6.21.3</version>
    </dependency>
    <dependency>
      <groupId>net.sf.jasperreports</groupId>
      <artifactId>jasperreports-fonts</artifactId>
      <version>6.21.3</version>
    </dependency>
    <dependency>
      <groupId>net.sf.jasperreports</groupId>
      <artifactId>jasperreports-functions</artifactId>
      <version>6.21.3</version>
    </dependency>

    <!-- PDF -->
    <dependency>
      <groupId>com.github.librepdf</groupId>
      <artifactId>openpdf</artifactId>
      <version>1.3.29</version>
    </dependency>

    <!-- Jakarta Activation -->
    <dependency>
      <groupId>com.sun.activation</groupId>
      <artifactId>jakarta.activation</artifactId>
      <version>2.0.1</version>
    </dependency>

    <!-- JAXB for JDK 23 -->
    <dependency>
      <groupId>org.glassfish.jaxb</groupId>
      <artifactId>jaxb-runtime</artifactId>
      <version>3.0.2</version>
    </dependency>

    <!-- NetBeans AbsoluteLayout -->
    <dependency>
      <groupId>org.netbeans.external</groupId>
      <artifactId>AbsoluteLayout</artifactId>
      <version>RELEASE240</version>
    </dependency>

    <!-- JUnit 5 -->
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter</artifactId>
      <version>5.13.1</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>com.toedter</groupId>
      <artifactId>jcalendar</artifactId>
      <version>1.4</version>
    </dependency>

    <!-- BCrypt -->
    <dependency>
      <groupId>org.mindrot</groupId>
      <artifactId>jbcrypt</artifactId>
      <version>0.4</version>
    </dependency>

    <!-- Log4j2 -->
    <dependency>
      <groupId>org.apache.logging.log4j</groupId>
      <artifactId>log4j-api</artifactId>
      <version>2.23.1</version>
    </dependency>
    <dependency>
      <groupId>org.apache.logging.log4j</groupId>
      <artifactId>log4j-core</artifactId>
      <version>2.23.1</version>
    </dependency>
  </dependencies>

  <build>
    <plugins>
      <!-- Tests -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>${surefire.version}</version>
        <configuration>
          <useModulePath>false</useModulePath>
        </configuration>
      </plugin>

      <!-- JaCoCo coverage (produces XML Sonar reads) -->
      <plugin>
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
        <version>${jacoco.version}</version>
        <executions>
          <execution>
            <goals>
              <goal>prepare-agent</goal>
            </goals>
          </execution>
          <execution>
            <id>report</id>
            <phase>test</phase>
            <goals>
              <goal>report</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <!-- Pin Sonar scanner for embedded Maven in NetBeans -->
      <plugin>
        <groupId>org.sonarsource.scanner.maven</groupId>
        <artifactId>sonar-maven-plugin</artifactId>
        <version>${sonar.maven.plugin.version}</version>
      </plugin>
    </plugins>
  </build>

  <!-- Run OWASP Dependency-Check only when explicitly requested -->
  <profiles>
    <profile>
      <id>depcheck</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.owasp</groupId>
            <artifactId>dependency-check-maven</artifactId>
            <version>${depcheck.version}</version>
            <dependencies>
              <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-collections4</artifactId>
                <version>4.4</version>
              </dependency>
            </dependencies>
            <executions>
              <execution>
                <id>audit-dependencies</id>
                <phase>verify</phase>
                <goals>
                  <goal>check</goal>
                </goals>
                <configuration>
                  <outputDirectory>${project.build.directory}/dependency-check-report</outputDirectory>
                  <formats>
                    <format>HTML</format>
                    <format>XML</format>
                    <format>JUNIT</format>
                    <format>SARIF</format>
                  </formats>
                  <failBuildOnCVSS>${depcheck.fail.cvss}</failBuildOnCVSS>
                  <failOnError>false</failOnError>
                  <autoUpdate>true</autoUpdate>
                  <nodeAuditAnalyzerEnabled>false</nodeAuditAnalyzerEnabled>
                  <yarnAuditAnalyzerEnabled>false</yarnAuditAnalyzerEnabled>
                  <pnpmAuditAnalyzerEnabled>false</pnpmAuditAnalyzerEnabled>
                  <scanPlugins>false</scanPlugins>
                  <skipTestScope>false</skipTestScope>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
</project>